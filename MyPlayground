import UIKit

var str = "Hello, playground"

// ----- Variables -----

var a = 1
var b = 1

a = 2

print(a + b)
print(a - b)
print(a / b)
print(a * b)

// Constants

let c = 20
//c = 5 //=> error

// Converting Data Types
str = "29"
print(str)

str = String(29)

var float:Float = 2.3
var double:Double = 15.222
var tf:Bool = true

print(Int(float))

print(double)
print(round(double))
print(Int(round(double)))


// ----- If Statements -----
 var f = 10
 
if f < 4 {
    
    print("Hey")
}else if f == 10 && f > 5{
    
    print("Hi")
}else if f <= 5{
    
    print("Humm")
}else{
    
    print("Nothing was true")
}
 
// ----- Switch Statements -----

var someChar:Character = "a"

switch someChar {
case "a":
    print("It works!")
case "b", "c":
    print("Nope")
default:
    print("Meh")
}

// ----- Loops -----

// for in
for idx in 1...5{
    print(idx)
    print("Hello")
    
    var sum = 0
    sum += idx
    print(sum)
}

// while
// ----- Loops -----

// for in
for idx in 1...5{
    print(idx)
    print("Hello")
    
    var sum = 0
    sum += idx
    print(sum)
}

// while

var count = -5

while count < 0{
   print("hello")
   count = count - 1
}

repeat{
   print("hoo")
   count = count - 1
}while count > 0

// ----- Functions -----

func addTwo(){
    let num1 = 2
    let num2 = 4
    let addition = num1 + num2
    
    print(addition)
}

addTwo()

func addT() -> Int {
    let num1 = 2
    let num2 = 4
    let addition = num1 + num2
    
    return addition
}

let summ =  addT()
print(summ)

// With input params

func addThem(arg1 param1:Int, arg2 param2:Int) -> Int {
    let num1 = param1
    let num2 = param2
    let addition = num1 + num2
    
    return addition
}

let sm = addThem(arg1: 3, arg2: 8)
print(sm)

//--------

func rturn(num1:Int, num2:Int) -> Int {
    return num1 + num2
}


let addi = rturn(num1: 5, num2: 10)
print(addi)

//-------

func rtrn(using num1:Int, and num2:Int) -> Int {
    return num1 + num2
}


let adi = rtrn(using: 4, and: 10)
print(adi)

//-------

func rtn(_ num1:Int, _ num2:Int) -> Int {
    return num1 + num2
}


let ad = rtn(4, 10)
print(ad)

// ----- Classes -----

class BlogPost{
    
//    properties
    var title = ""
    var body = ""
    var author = ""
    var numOfComments = 0
    
    func addComment() {
        numOfComments += 1
    }
}

print()
// instance of BlogPost = object
let myPost = BlogPost()

myPost.title = "My Blog"
myPost.body = "This is my post."
myPost.author = "Ken"
myPost.addComment()
print(myPost.numOfComments)

print()
// ------ Inheritance

class Car{
    var topSpeed = 200
    
    func drive(){
        print("Driving at \(topSpeed)")
    }
}

class FutureCar : Car{
    
    func fly(){
        print("Flying at \(topSpeed)")
    }
        
    override func drive(){
        
        super.drive()
        print(" and Flying at \(topSpeed + 100)")
        }
    }


let myRide = FutureCar()
print(myRide.fly())
print(myRide.drive())

// ------ Arrays  ------

var pets = ["dog", "cat", "bird"]

pets[0]

for counter in 0...2{
    print("my " + pets[counter])
}
